{"version":3,"sources":["atoms/Button.tsx","atoms/Timer.tsx","atoms/TextInput.tsx","AppComponent.tsx","AppContainer.tsx","index.tsx"],"names":["Button","children","rest","Timer","elapsedTime","TextInput","onChange","value","AppComponent","onStart","onPause","onReset","onUserRegister","username","users","onClick","map","user","key","numberToTimeString","count","Date","setSeconds","toISOString","substr","AppContainer","React","useRef","timerID","useState","setUsers","setUsername","tickCount","setTickCount","useCallback","event","current","setInterval","clearInterval","undefined","currentTarget","prev","ReactDOM","render","document","getElementById"],"mappings":"6JASeA,EAP4D,SAAC,GAGrE,IAFLC,EAEI,EAFJA,SACGC,EACC,4BACJ,OAAO,2BAAYA,EAAOD,ICEbE,EANiD,SAAC,GAE1D,IADLC,EACI,EADJA,YAEA,OAAO,8CAAoBA,ICIdC,EAJV,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChB,OAAO,2BAAOD,SAAUA,EAAUC,MAAOA,KCyC5BC,EAjCV,SAAC,GASC,IARLJ,EAQI,EARJA,YACAK,EAOI,EAPJA,QACAC,EAMI,EANJA,QACAC,EAKI,EALJA,QACAL,EAII,EAJJA,SACAM,EAGI,EAHJA,eACAC,EAEI,EAFJA,SACAC,EACI,EADJA,MAEA,OACE,oCACE,6BACE,kBAAC,EAAD,CAAOV,YAAaA,IACpB,kBAAC,EAAD,CAAQW,QAASN,GAAjB,SACA,kBAAC,EAAD,CAAQM,QAASL,GAAjB,SACA,kBAAC,EAAD,CAAQK,QAASJ,GAAjB,UAEF,6BACE,kBAAC,EAAD,CAAWL,SAAUA,EAAUC,MAAOM,IACtC,kBAAC,EAAD,CAAQE,QAASH,GAAjB,aAEF,6BACE,4BACGE,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GAAOA,UCiC5B,SAASE,EAAmBC,GAC1B,IAAMhB,EAAc,IAAIiB,KAAKD,GAE7B,OADAhB,EAAYkB,WAAWF,GAChBhB,EAAYmB,cAAcC,OAAO,GAAI,GAG/BC,MA1E+B,WAC5C,IAAML,EAAQM,IAAMC,OAAO,GACrBC,EAAUF,IAAMC,SAF4B,EAGxBD,IAAMG,SAAmB,IAHD,mBAG3Cf,EAH2C,KAGpCgB,EAHoC,OAIlBJ,IAAMG,SAAS,IAJG,mBAI3ChB,EAJ2C,KAIjCkB,EAJiC,OAMhBL,IAAMG,SAAS,GANC,mBAM3CG,EAN2C,KAMhCC,EANgC,KAQ5CxB,EAAUiB,IAAMQ,aACpB,SAACC,GACKP,EAAQQ,UAGZR,EAAQQ,QAAUC,aAAY,WAC5BjB,EAAMgB,SAAW,EACjBH,EAAab,EAAMgB,WAClB,QAEL,CAAChB,IAGGV,EAAUgB,IAAMQ,aACpB,SAACC,GACKP,EAAQQ,UACVE,cAAcV,EAAQQ,SACtBR,EAAQQ,aAAUG,KAGtB,CAACX,IAGGjB,EAAUe,IAAMQ,aACpB,SAACC,GACCf,EAAMgB,QAAU,EAChBH,EAAab,EAAMgB,WAErB,CAAChB,IAGGd,EAAWoB,IAAMQ,aACrB,SAACC,GACCJ,EAAYI,EAAMK,cAAcjC,SAElC,IAGIK,EAAiBc,IAAMQ,aAC3B,SAACC,GACCL,GAAS,SAAAW,GAAI,4BAAQA,GAAR,CAAc5B,OAC3BkB,EAAY,MAEd,CAAClB,IAGH,OACE,kBAAC,EAAD,CACET,YAAae,EAAmBa,GAChCvB,QAASA,EACTC,QAASA,EACTC,QAASA,EACTL,SAAUA,EACVM,eAAgBA,EAChBC,SAAUA,EACVC,MAAOA,KC9Db4B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.51bfbf23.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button: React.FunctionComponent<React.HTMLAttributes<HTMLElement>> = ({\n  children,\n  ...rest\n}) => {\n  return <button {...rest}>{children}</button>;\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Timer: React.FunctionComponent<{ elapsedTime: string }> = ({\n  elapsedTime\n}) => {\n  return <div>Elapsed time: {elapsedTime}</div>;\n};\n\nexport default Timer;\n","import React from \"react\";\n\nconst TextInput: React.FunctionComponent<{\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n}> = ({ onChange, value }) => {\n  return <input onChange={onChange} value={value} />;\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport Button from \"./atoms/Button\";\nimport Timer from \"./atoms/Timer\";\nimport TextInput from \"./atoms/TextInput\";\n\nconst AppComponent: React.FunctionComponent<{\n  elapsedTime: string;\n  onStart: (event: React.MouseEvent<HTMLElement>) => void;\n  onPause: (event: React.MouseEvent<HTMLElement>) => void;\n  onReset: (event: React.MouseEvent<HTMLElement>) => void;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onUserRegister: (event: React.MouseEvent<HTMLElement>) => void;\n  username: string;\n  users: string[];\n}> = ({\n  elapsedTime,\n  onStart,\n  onPause,\n  onReset,\n  onChange,\n  onUserRegister,\n  username,\n  users\n}) => {\n  return (\n    <>\n      <div>\n        <Timer elapsedTime={elapsedTime} />\n        <Button onClick={onStart}>Start</Button>\n        <Button onClick={onPause}>Pause</Button>\n        <Button onClick={onReset}>Reset</Button>\n      </div>\n      <div>\n        <TextInput onChange={onChange} value={username} />\n        <Button onClick={onUserRegister}>Register</Button>\n      </div>\n      <div>\n        <ul>\n          {users.map(user => (\n            <li key={user}>{user}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default AppComponent;\n","import React from \"react\";\n\nimport AppComponent from \"./AppComponent\";\n\nconst AppContainer: React.FunctionComponent = () => {\n  const count = React.useRef(0);\n  const timerID = React.useRef<NodeJS.Timeout>();\n  const [users, setUsers] = React.useState<string[]>([]);\n  const [username, setUsername] = React.useState(\"\");\n\n  const [tickCount, setTickCount] = React.useState(0);\n\n  const onStart = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (timerID.current) {\n        return;\n      }\n      timerID.current = setInterval(() => {\n        count.current += 1;\n        setTickCount(count.current);\n      }, 1000);\n    },\n    [count]\n  );\n\n  const onPause = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (timerID.current) {\n        clearInterval(timerID.current);\n        timerID.current = undefined;\n      }\n    },\n    [timerID]\n  );\n\n  const onReset = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      count.current = 0;\n      setTickCount(count.current);\n    },\n    [count]\n  );\n\n  const onChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(event.currentTarget.value);\n    },\n    []\n  );\n\n  const onUserRegister = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      setUsers(prev => [...prev, username]);\n      setUsername(\"\");\n    },\n    [username]\n  );\n\n  return (\n    <AppComponent\n      elapsedTime={numberToTimeString(tickCount)}\n      onStart={onStart}\n      onPause={onPause}\n      onReset={onReset}\n      onChange={onChange}\n      onUserRegister={onUserRegister}\n      username={username}\n      users={users}\n    ></AppComponent>\n  );\n};\n\nfunction numberToTimeString(count: number): string {\n  const elapsedTime = new Date(count);\n  elapsedTime.setSeconds(count);\n  return elapsedTime.toISOString().substr(11, 8);\n}\n\nexport default AppContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\n"],"sourceRoot":""}